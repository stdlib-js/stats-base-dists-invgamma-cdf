{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport gammainc from '@stdlib/math-base-special-gammainc';\nimport isnan from '@stdlib/math-base-assert-is-nan';\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for an inverse gamma distribution with shape parameter `alpha` and scale parameter `beta` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} alpha - shape parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 1.0, 1.0 );\n* // returns ~0.607\n*\n* @example\n* var y = cdf( 2.0, 3.0, 1.0 );\n* // returns ~0.986\n*\n* @example\n* var y = cdf( -1.0, 2.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( +Infinity, 4.0, 2.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( -Infinity, 4.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, -1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 1.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, alpha, beta ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= 0.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn gammainc( beta / x, alpha, true, true );\n}\n\n\n// EXPORTS //\n\nexport default cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport constantFunction from '@stdlib/utils-constant-function';\nimport gammainc from '@stdlib/math-base-special-gammainc';\nimport isnan from '@stdlib/math-base-assert-is-nan';\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for an inverse gamma distribution with shape parameter `alpha` and scale parameter `beta`.\n*\n* @param {PositiveNumber} alpha - shape parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 3.0, 1.5 );\n*\n* var y = cdf( 1.0 );\n* // returns ~0.809\n*\n* y = cdf( 2.0 );\n* // returns ~0.96\n*/\nfunction factory( alpha, beta ) {\n\tif (\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for an inverse gamma distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= 0 ) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn gammainc( beta / x, alpha, true, true );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Inverse gamma distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats-base-dists-invgamma-cdf\n*\n* @example\n* import cdf from '@stdlib/stats-base-dists-invgamma-cdf';\n*\n* var y = cdf( 1.0, 8.0, 3.0 );\n* // returns ~0.988\n*\n* y = cdf( 0.0, 1.0, 1.0 );\n* // returns 0.0\n*\n* var mycdf = cdf.factory( 2.0, 0.5 );\n* y = mycdf( 0.5 );\n* // returns ~0.736\n*\n* y = mycdf( 2.0 );\n* // returns ~0.973\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["cdf","x","alpha","beta","isnan","NaN","gammainc","factory","constantFunction","setReadOnly","main"],"mappings":";;mZA4EA,SAASA,EAAKC,EAAGC,EAAOC,GACvB,OACCC,EAAOH,IACPG,EAAOF,IACPE,EAAOD,IACPD,GAAS,GACTC,GAAQ,EAEDE,IAEHJ,GAAK,EACF,EAEDK,EAAUH,EAAOF,EAAGC,GAAO,GAAM,EACzC,CC7CA,SAASK,EAASL,EAAOC,GACxB,OACCC,EAAOF,IACPE,EAAOD,IACPD,GAAS,GACTC,GAAQ,EAEDK,EAAkBH,KAe1B,SAAcJ,GACb,GAAKG,EAAOH,GACX,OAAOI,IAER,GAAKJ,GAAK,EACT,OAAO,EAER,OAAOK,EAAUH,EAAOF,EAAGC,GAAO,GAAM,EACxC,CACF,CCzBAO,EAAAC,EAAA,UAAAH"}